import { z } from "zod";

export const RegistrationFormDataSchema = z
  .object({
    fullName: z.string().min(1, "Введите имя"),
    weight: z
      .string()
      .transform(Number)
      .refine((val) => !isNaN(val), "Значение должно быть числом")
      .refine((val) => val > 0, "Некорректное значение"),
    height: z
      .string()
      .transform(Number)
      .refine((val) => !isNaN(val), "Значение должно быть числом")
      .refine((val) => val > 0, "Некорректное значение"),
    email: z.string().min(1, "Введите e-mail").email("Некорректный e-mail"),
    password: z
      .string()
      .min(8, "Пароль должен содержать не менее 8 символов")
      .max(20, "Пароль не должен превышать 20 символов")
      .regex(
        /(?=.*[a-z])/,
        "Пароль должен содержать как минимум одну букву в нижнем регистре"
      )
      .regex(
        /(?=.*[A-Z])/,
        "Пароль должен содержать как минимум одну букву в верхнем регистре"
      )
      .regex(/(?=.*\d)/, "Пароль должен содержать как минимум одну цифру")
      .regex(
        /(?=.*[!@#$%^&*()_+{}\[\]:;<>,.?~\\/-])/,
        "Пароль должен содержать как минимум один спецсимвол"
      ),
    confirmPassword: z
      .string()
      .min(8, "Пароль должен содержать не менее 8 символов")
      .max(20, "Пароль не должен превышать 20 символов")
      .regex(
        /(?=.*[a-z])/,
        "Пароль должен содержать как минимум одну букву в нижнем регистре"
      )
      .regex(
        /(?=.*[A-Z])/,
        "Пароль должен содержать как минимум одну букву в верхнем регистре"
      )
      .regex(/(?=.*\d)/, "Пароль должен содержать как минимум одну цифру")
      .regex(
        /(?=.*[!@#$%^&*()_+{}\[\]:;<>,.?~\\/-])/,
        "Пароль должен содержать как минимум один спецсимвол"
      ),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: "Пароли должны совпадать",
    path: ["confirmPassword"],
  });
